最后一章节来总结高级的gawk的用法。认真的看了一遍，发现gawk这东西其实就是一门语言，无误！使用方法非常的得心应手

1、内建的变量：（挑选几个有用的）
FIELDWIDTHS	每个数据字段的确切宽度
FS 	输入字段分隔符
RS	输入数据行的分隔符
OFS	输出字段分隔符
ORS	输出行的数据分隔符
ARGC	当前命令行参数个数
ARGIND	当前文件在ARGV中的位置
ARGV 	包含命令行参数的数组
ENVIRON	当前shell环境变量及其值组成的关联数组
FILENAME	当前数据文件中的数据行数
FNR	当前数据文件中的数据行数
NF	数据文件中的字段总数
NR	已处理的输入数据行数目

2、自定义数组：gawk中的数组使用类似于Java中的map的形式，叫做关联数组
	举例：var[index] = element
	说明：其中index可以是字符串
	遍历数组：
		for(i in var)
		{
			print "Index:",i,"value:",var[i]
		}
3、使用模式：
	正则：gawk 'BEGIN{FS=","} /11/{print $1}' data（匹配数据字段中含有字符串11的数据行）
	操作符：gawk 'BEGIN{FS=","} $2 ~ /^data2/{print $0}' data1（表示第二个数据字段是以data2开头的数据行）
	表达式：gawk -F: '$4 == 0{print $1}' /etc/passwd（表示第4个字段等于零的数据行，输出第1个字段）
	