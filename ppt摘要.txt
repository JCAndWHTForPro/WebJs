列表
1、列表使用方式param = ['a','b']，访问方式param[0],param[1]
2、修改：param[0]='c'，添加：param.append('b')，插入：param.insert(0,'d')，删除：del param[1]
3、value = pop(0)，param.remove('a')
4、永久性排序：param.sort()，临时排序：paramTemp = param.sorted()
5、param.reverse()
6、访问最后一个元素param[-1]
列表操作
1、使用for循环进行遍历列表：for value in param
2、使用range()函数生成列表：range(1,5)，修改range函数的增长步长：range(1,5,2)
3、关键功能切片：param[1:2],param[1:],param[:3],param[:]
4、元祖：(12,35,68)
if语句
if age<4:
	print 4
elif age>=4 and age<=8:
	print 5
else:
	print 11
if not age<4:
	print 6
字典
1、简单的字典map = {'key1':'asd','key2':3,3:"234"}
2、删除键值对：del map['key1']
3、遍历字典：for key,value in map.items(),for key in map.keys(),for value in map.values()
4、排序字典sorted(map.keys())
while循环
current_number = 1
while current_number<=5:
	print current_number
	current_number += 1
函数与类
1、函数的定义：
def greet_user():
	print "hello!"
2、关键字实参：就是调用函数的时候传递一个键值对，这样就可以不用考虑参数传递的位置，例如：fun(param1=1,param3=3,param2=2)
3、默认值：在函数定义的时候，可以传递一个值给形参，这样就可以在调用的时候，有一个默认值而可以不用传递这个参数，例如：def fun(param1,param2=4)
4、导入模块的时候可以使用as指定别名：import module_name as mn
5、类的定义：
class Dog(Object):
	def __init__(self,param1,param2):
		super(Dog,self).__init__()
		self.param1 = param2
		self.param2 = param2
	def fun(self):
		pass
文件和异常
1、使用with关键字，可以自动关闭：
with open('text.txt') as file_obj:
	cotents = file_obj.read()
	print contents
2、文件路径问题：window下面使用的是\,Linux下面使用的是/，在python打开文件过程中最好使用/，以防止转义字符的出现

3、逐行读取读取一个文件：
with open('text.txt') as file_obj:
	for line in file_obj:
		print line
4、创建一个包含文件各行的一个列表：
with open('text.txt') as file_obj:
	lines = file_obj.readLines()
for line in lines:
	print line
5、文件的读写、追加：
with open('text.txt','w') as file_obj//这种是只能写不能读取的，而且写的时候如果文件不存在会自动创建，如果文件存在或覆盖原先的内容
with open('text.txt','a') as file_obj//这种是以追加的方式打开文件，可以向文件后面直接添加内容
with open('text.txt','r+') as file_obj//这种是以读写的方式打开文件

6、异常相关：
try:
	pass//正常要异常检查的代码块
except Exception as e:
	raise//异常处理代码块
else:
	pass//只有try代码块正常执行了，才会运行的代码块
finally:
	pass//无论怎么样都会执行的代码块
7、python测试的本来真面目：
import unittest
class Testtest(unittest.TestCase):
	def setUp(): //在每个测试方法之前都会调用
		pass
    def test_first_test(self):
        pass
unittest.main()
